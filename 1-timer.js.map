{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\nlet userSelectedDate;\nlet intervalId;\n\nfunction addZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateClock({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addZero(days);\n  hoursEl.textContent = addZero(hours);\n  minutesEl.textContent = addZero(minutes);\n  secondsEl.textContent = addZero(seconds);\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (selectedDate <= now) {\n      startBtn.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      updateClock({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      Ñ—;\n\n      dateInput.disabled = false;\n      return;\n    }\n\n    const timeLeft = convertMs(diff);\n    updateClock(timeLeft);\n  }, 1000);\n});\n"],"names":["dateInput","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","addZero","value","convertMs","ms","days","hours","minutes","seconds","updateClock","options","selectedDates","selectedDate","iziToast","flatpickr","diff","timeLeft"],"mappings":"+IAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAEhDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,SAAW,GACpB,IAAIK,EACAC,EAEJ,SAASC,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAY,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDb,EAAO,YAAcM,EAAQI,CAAI,EACjCT,EAAQ,YAAcK,EAAQK,CAAK,EACnCT,EAAU,YAAcI,EAAQM,CAAO,EACvCT,EAAU,YAAcG,EAAQO,CAAO,CACzC,CAEA,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFQ,IAAI,MAGdlB,EAAS,SAAW,GACpBmB,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDd,EAAmBa,EACnBlB,EAAS,SAAW,GAEvB,CACH,EAEAoB,EAAUrB,EAAWiB,CAAO,EAE5BhB,EAAS,iBAAiB,QAAS,IAAM,CAClCK,IAELL,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErBO,EAAa,YAAY,IAAM,CAE7B,MAAMe,EAAOhB,EADD,IAAI,KAGhB,GAAIgB,EAAO,IAAM,CACf,cAAcf,CAAU,EACxBS,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzD,EAEAhB,EAAU,SAAW,GACrB,MACD,CAED,MAAMuB,EAAWb,EAAUY,CAAI,EAC/BN,EAAYO,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC"}